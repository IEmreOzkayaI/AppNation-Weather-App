version: '3.8'

networks:
  appnation-network:
    driver: bridge

services:
  appnation-gw:
    build:
      context: ./appnation-gw
      dockerfile: Dockerfile
    container_name: appnation-gateway
    ports:
      - "8080:8080"
    depends_on:
      - redis-server
      - appnation-identity-service
    env_file:
      - path: ./appnation-gw/.env
    networks:
      - appnation-network

  appnation-identity-service:
    build:
      context: ./appnation-identity-service
      dockerfile: Dockerfile
    container_name: appnation-identity-service
    ports:
      - '3001:3000'
    restart: unless-stopped
    depends_on:
      - postgres
      - appnation-migrator
    env_file:
      - path: ./appnation-identity-service/.env
    volumes:
      - ./appnation-identity-service/private.pem:/usr/app/private.pem
    networks:
      - appnation-network
      
  appnation-weather-service:
    build:
      context: ./appnation-weather-service
      dockerfile: Dockerfile
    container_name: appnation-weather-service
    ports:
      - '3003:3002'
    restart: unless-stopped
    depends_on:
      - postgres
      - redis-server
    env_file:
      - path: ./appnation-weather-service/.env
    networks:
      - appnation-network

  postgres:
    image: postgres:15-alpine
    container_name: appnation-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: appnation-db
      POSTGRES_USER: appnation-db_owner
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - appnation-network      

  redis-server:
    image: redis:alpine
    container_name: redis-server
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - appnation-network
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  appnation-migrator:
    build:
      context: ./appnation-identity-service
      dockerfile: Dockerfile
      target: appbuild
    container_name: appnation-migrator
    depends_on:
      - postgres
    environment:
      POSTGRES_DB: appnation-db
      POSTGRES_USER: appnation-db_owner
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - appnation-network
    command: pnpm run prisma:push